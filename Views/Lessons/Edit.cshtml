@model EdPlatformWebsite.Models.Lesson

@{
    ViewData["Title"] = "Edit";
}

<div class='content'>
    <h1 class='title medium'>Lesson editor</h1>
    <form class='model-form' asp-action="Edit" name='lessonEditForm'>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            @Html.LabelFor(m => m.ModuleId, "Module")
            <select asp-for="ModuleId" asp-items="@(new SelectList(ViewBag.Modules, nameof(Module.Id), nameof(Module.Name)))">
            </select>
            <span asp-validation-for="ModuleId" class="text-danger"></span>
        </div>
        <div class='form=group'>
            <label asp-for="Number" class="control-label">Lesson</label>
            <input asp-for="Number" class="form-control" />
            <input asp-for="Name" class="form-control" />
            <input asp-for="Content" type="hidden" class="form-control" id="text-input"/>
            <span asp-validation-for="Number" class="text-danger"></span>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <span asp-validation-for="Content" class="text-danger"></span>
            <partial name="_EditorPartial" />
        </div>
        <input type="submit" value="Save" class="button" onclick='save();' />
        <a asp-action="Index">Back to List</a>
    </form>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
